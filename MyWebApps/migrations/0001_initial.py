# Generated by Django 5.2.7 on 2025-10-06 02:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('icono', models.CharField(blank=True, max_length=50, null=True, verbose_name='Icono')),
                ('activa', models.BooleanField(default=True, verbose_name='Activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'categoria',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(max_length=200, verbose_name='Nombre de la Empresa')),
                ('ruc', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='RUC')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('sector', models.CharField(blank=True, max_length=100, null=True, verbose_name='Sector')),
                ('ubicacion', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ubicación')),
                ('sitio_web', models.URLField(blank=True, null=True, verbose_name='Sitio Web')),
                ('logo_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='URL del Logo')),
                ('tamaño_empresa', models.CharField(choices=[('startup', 'Startup (1-10)'), ('pyme', 'PYME (11-50)'), ('mediana', 'Mediana (51-200)'), ('grande', 'Grande (201-1000)'), ('corporacion', 'Corporación (1000+)')], default='pyme', max_length=20, verbose_name='Tamaño de Empresa')),
                ('telefono_empresa', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('verificada', models.BooleanField(default=False, verbose_name='Verificada')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'empresa',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PerfilPostulante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_profesional', models.CharField(blank=True, max_length=200, null=True, verbose_name='Título Profesional')),
                ('resumen_profesional', models.TextField(blank=True, null=True, verbose_name='Resumen Profesional')),
                ('nivel_experiencia', models.CharField(choices=[('sin_experiencia', 'Sin Experiencia'), ('junior', 'Junior (1-2 años)'), ('semi_senior', 'Semi Senior (3-5 años)'), ('senior', 'Senior (6-10 años)'), ('lead', 'Lead/Experto (10+ años)')], default='sin_experiencia', max_length=20, verbose_name='Nivel de Experiencia')),
                ('años_experiencia', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)], verbose_name='Años de Experiencia')),
                ('habilidades', models.TextField(blank=True, null=True, verbose_name='Habilidades')),
                ('educacion', models.TextField(blank=True, null=True, verbose_name='Educación')),
                ('experiencia_laboral', models.TextField(blank=True, null=True, verbose_name='Experiencia Laboral')),
                ('certificaciones', models.TextField(blank=True, null=True, verbose_name='Certificaciones')),
                ('idiomas', models.TextField(blank=True, null=True, verbose_name='Idiomas')),
                ('cv_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='URL del CV')),
                ('foto_perfil_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='URL Foto de Perfil')),
                ('ubicacion', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ubicación')),
                ('salario_esperado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salario Esperado')),
                ('moneda_salario', models.CharField(default='PEN', max_length=3, verbose_name='Moneda')),
                ('disponibilidad', models.CharField(choices=[('inmediata', 'Inmediata'), ('2_semanas', '2 Semanas'), ('1_mes', '1 Mes'), ('negociable', 'Negociable')], default='negociable', max_length=20, verbose_name='Disponibilidad')),
                ('portafolio_url', models.URLField(blank=True, null=True, verbose_name='URL del Portafolio')),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='URL de LinkedIn')),
                ('github_url', models.URLField(blank=True, null=True, verbose_name='URL de GitHub')),
                ('completado', models.BooleanField(default=False, verbose_name='Perfil Completado')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Perfil de Postulante',
                'verbose_name_plural': 'Perfiles de Postulantes',
                'db_table': 'perfil_postulante',
                'ordering': ['-fecha_actualizacion'],
            },
        ),
        migrations.CreateModel(
            name='OfertaTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('requisitos', models.TextField(blank=True, null=True, verbose_name='Requisitos')),
                ('responsabilidades', models.TextField(blank=True, null=True, verbose_name='Responsabilidades')),
                ('beneficios', models.TextField(blank=True, null=True, verbose_name='Beneficios')),
                ('salario_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salario Mínimo')),
                ('salario_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salario Máximo')),
                ('moneda', models.CharField(default='PEN', max_length=3, verbose_name='Moneda')),
                ('ubicacion', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ubicación')),
                ('modalidad', models.CharField(choices=[('presencial', 'Presencial'), ('remoto', 'Remoto'), ('hibrido', 'Híbrido')], max_length=20, verbose_name='Modalidad')),
                ('tipo_contrato', models.CharField(choices=[('tiempo_completo', 'Tiempo Completo'), ('medio_tiempo', 'Medio Tiempo'), ('por_proyecto', 'Por Proyecto'), ('freelance', 'Freelance'), ('practicas', 'Prácticas'), ('temporal', 'Temporal')], max_length=20, verbose_name='Tipo de Contrato')),
                ('nivel_experiencia', models.CharField(choices=[('sin_experiencia', 'Sin Experiencia'), ('junior', 'Junior'), ('semi_senior', 'Semi Senior'), ('senior', 'Senior'), ('lead', 'Lead/Experto')], max_length=20, verbose_name='Nivel de Experiencia Requerido')),
                ('vacantes_disponibles', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Vacantes Disponibles')),
                ('fecha_publicacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Publicación')),
                ('fecha_expiracion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Expiración')),
                ('fecha_inicio_deseada', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio Deseada')),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('pendiente_aprobacion', 'Pendiente de Aprobación'), ('activa', 'Activa'), ('pausada', 'Pausada'), ('expirada', 'Expirada'), ('cerrada', 'Cerrada')], default='borrador', max_length=30, verbose_name='Estado')),
                ('aprobada_admin', models.BooleanField(default=False, verbose_name='Aprobada por Admin')),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Aprobación')),
                ('vistas', models.IntegerField(default=0, verbose_name='Número de Vistas')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('categoria', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ofertas', to='MyWebApps.categoria', verbose_name='Categoría')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofertas', to='MyWebApps.empresa', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Oferta de Trabajo',
                'verbose_name_plural': 'Ofertas de Trabajo',
                'db_table': 'oferta_trabajo',
                'ordering': ['-fecha_publicacion', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Postulacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_postulacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Postulación')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_revision', 'En Revisión'), ('preseleccionado', 'Preseleccionado'), ('entrevista', 'En Entrevista'), ('rechazado', 'Rechazado'), ('aceptado', 'Aceptado')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('carta_presentacion', models.TextField(blank=True, null=True, verbose_name='Carta de Presentación')),
                ('cv_url_postulacion', models.CharField(blank=True, max_length=500, null=True, verbose_name='URL del CV')),
                ('fecha_cambio_estado', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Cambio de Estado')),
                ('notas_empleador', models.TextField(blank=True, null=True, verbose_name='Notas del Empleador')),
                ('puntuacion_match', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Puntuación de Match (%)')),
                ('oferta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postulaciones', to='MyWebApps.ofertatrabajo', verbose_name='Oferta de Trabajo')),
                ('postulante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postulaciones', to='MyWebApps.perfilpostulante', verbose_name='Postulante')),
            ],
            options={
                'verbose_name': 'Postulación',
                'verbose_name_plural': 'Postulaciones',
                'db_table': 'postulacion',
                'ordering': ['-fecha_postulacion'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(blank=True, max_length=100, verbose_name='Apellido')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('tipo_usuario', models.CharField(choices=[('postulante', 'Postulante'), ('empleador', 'Empleador'), ('admin', 'Administrador')], default='postulante', max_length=20, verbose_name='Tipo de Usuario')),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('suspendido', 'Suspendido')], default='activo', max_length=20, verbose_name='Estado')),
                ('email_verificado', models.BooleanField(default=False, verbose_name='Email Verificado')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuario',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddField(
            model_name='perfilpostulante',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_postulante', to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('postulacion', 'Nueva Postulación'), ('estado_postulacion', 'Cambio Estado Postulación'), ('nueva_oferta', 'Nueva Oferta'), ('mensaje', 'Mensaje'), ('alerta', 'Alerta'), ('sistema', 'Sistema')], max_length=30, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('mensaje', models.TextField(verbose_name='Mensaje')),
                ('enlace', models.CharField(blank=True, max_length=500, null=True, verbose_name='Enlace')),
                ('leida', models.BooleanField(default=False, verbose_name='Leída')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_leida', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Lectura')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'db_table': 'notificacion',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Favorito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_agregado', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Agregado')),
                ('oferta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoritos', to='MyWebApps.ofertatrabajo', verbose_name='Oferta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoritos', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Favorito',
                'verbose_name_plural': 'Favoritos',
                'db_table': 'favorito',
                'ordering': ['-fecha_agregado'],
            },
        ),
        migrations.AddField(
            model_name='empresa',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='empresa', to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddIndex(
            model_name='ofertatrabajo',
            index=models.Index(fields=['estado', 'fecha_publicacion'], name='oferta_trab_estado_2114ed_idx'),
        ),
        migrations.AddIndex(
            model_name='ofertatrabajo',
            index=models.Index(fields=['categoria', 'estado'], name='oferta_trab_categor_b7324a_idx'),
        ),
        migrations.AddIndex(
            model_name='ofertatrabajo',
            index=models.Index(fields=['modalidad', 'estado'], name='oferta_trab_modalid_af05a7_idx'),
        ),
        migrations.AddIndex(
            model_name='postulacion',
            index=models.Index(fields=['estado', 'fecha_postulacion'], name='postulacion_estado_800a96_idx'),
        ),
        migrations.AddIndex(
            model_name='postulacion',
            index=models.Index(fields=['oferta', 'estado'], name='postulacion_oferta__6ebd41_idx'),
        ),
        migrations.AddIndex(
            model_name='postulacion',
            index=models.Index(fields=['postulante', 'estado'], name='postulacion_postula_91b3bc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='postulacion',
            unique_together={('oferta', 'postulante')},
        ),
        migrations.AddIndex(
            model_name='notificacion',
            index=models.Index(fields=['usuario', 'leida', '-fecha_creacion'], name='notificacio_usuario_59fc25_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favorito',
            unique_together={('usuario', 'oferta')},
        ),
    ]
